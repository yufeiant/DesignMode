package com.feiyu.bridge_pattern;
/**
 * 桥接模式(Bridge):将抽象部分与它的实现部分分离，使它们都可以独立的变化。
 * 什么叫抽象与它的实现分离，这并不是说，让抽象类与其派生类分离，因为这没有任何意义，实际上指的是抽象类和它的派生类用来实现自己的对象。
 * 官方解释就是这么难以理解，看了一遍还是不知是什么意思，这个还是需要结合具体的例子才能理解透彻。
 * 
 * 这里其实是有个面向对象的原则的：
 * 合成/聚合复用原则(CARP)：尽量使用合成/聚合，尽量不要使用类继承。
 * 
 * 什么意思？
 * 合成(Composition 也有翻译成组合)和聚合(Aggregation)都是关联的特殊种类，聚合表示一种弱的'拥有'关系，体现的是A对象可以包含B对象，但B对象不是A对象的
 * 一部分；合成则是一种强的'拥有'关系，体现了严格的部分和整体的关系，部分和整体的什么周期是一样的。
 * 
 * 比如大雁有两个翅膀，翅膀和大雁是部分与整体的关系，并且他们的什么周期都是相同的，于是大雁和翅膀就是合成关系，而大雁是一个群居动物，所以每一只大雁
 * 都是属于一个雁群，一个雁群可以有很多只大雁，所以大雁和雁群是聚合关系。
 * 
 * 合成/聚合复用原则的好处是：优先使用对象的合成、聚合将有助于你保持每一个类的封装，并被集中在单个任务上，这样类和类继承层次会保持较小规模，并且不太可能
 * 增长为不可控制的庞然大物。
 * 
 * 桥接模式就是合成、聚合复用的实际使用。
 * 
 * 实现系统有可能有多角度分类，每一种分类都有可能变化，那么就把这种多角度分离出来让他们独立变化，减少它们之间的耦合。
 * 
 * @author jfy
 *
 */
public class Main {
	
}
