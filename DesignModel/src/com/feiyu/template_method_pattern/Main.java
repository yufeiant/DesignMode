package com.feiyu.template_method_pattern;
/**
 * 模板方法模式--定义一个操作做的算法的骨架，而将一些步骤延迟到子类中，模板方法使得子类
 * 可以不改变算法的结构即可重定义算法的某些关键步骤。
 * 
 * 模板方法模式--其实就是把子类中很多重复的代码逻辑抽取出来放到父类中，而具体的逻辑不同的
 * 则由子类自己去完成。
 * 
 * 使用场景：当我们要完成在某一细节层次一致的一个过程或一系列步骤，但某个别步骤在某详细的
 * 层次上的实现可能不同是，我们通常要考虑要用到模板方法模式。
 * 
 * 其实就是玩的继承这套，我们可以用接口实现，也可以用抽象类来实现。
 * 
 * 这个是按照书上写的一个非常简单的例子，要求是，老师在黑板上写上考试题目，学生要把考试的
 * 题都抄下来，然后写下自己的答案。在这个例子中，所有的考试题都是相同的，所以应该抽取出来
 * 而每一个学生的答案又不同，这部分要子类去实现，最后应该是老师去把卷子的结果计算出来，
 * 我们在卷子中设定了一个result方法，可以直接得到结果。
 * 
 * 模板方法就是这样简单。记得抽取我们相同的东西到父类，不同的东西到子类。
 * 
 * @author feiyu
 *
 */
public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TestPager testa = new TestPagerA();
		testa.result();
		TestPager testb = new TestPagerB();
		testb.result();
	}

}
